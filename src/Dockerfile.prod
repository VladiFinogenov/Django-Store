###########
# BUILDER #
###########

FROM python:3.11.0-alpine AS builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Установка системных зависимостей
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# Установка Poetry
RUN pip install --upgrade pip "poetry==1.8.3"

# Настройка Poetry для установки без создания виртуального окружения
RUN poetry config virtualenvs.create false --local

# Копирование зависимостей проекта
COPY pyproject.toml poetry.lock ./

# Установка зависимостей
RUN poetry install --no-root --no-dev

#########
# FINAL #
#########

FROM python:3.11.0-alpine

ENV HOME=/home/app
ENV APP_HOME=/home/app/web

# создаем домашнюю директорию для пользователя(/home/app) и директорию для проекта(/home/app/web)
# создаем группу app и отдельного пользователя app
RUN mkdir -p $APP_HOME \
    && addgroup -S app \
    && adduser -S app -G app \
    && apk update \
    && apk add libpq

# Установка Poetry в финальной стадии
RUN pip install poetry

# Устанавливаем рабочую директорию
WORKDIR /usr/src/app

# Копируем файлы проекта и зависимости из builder
COPY --from=builder /usr/src/app /usr/src/app

# Устанавливаем зависимости через Poetry
RUN poetry install --no-root --no-dev

# устанавливаем рабочую директорию
WORKDIR $APP_HOME

# Копирование проекта в рабочую директорию
COPY . .

# изменение владельца, для всех директорий и файлов проекта, на пользователя app
RUN chown -R app:app .

# изменение рабочего пользователя на app
USER app

#RUN chmod +x entrypoint.prod.sh
#ENTRYPOINT ["./entrypoint.prod.sh"]
